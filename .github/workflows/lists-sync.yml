name: Build and Deploy Lists Sync Service

on:
  push:
    branches: [main, feature/lists-sync]
    paths:
      - 'lists-sync/**'
  pull_request:
    branches: [main]
    paths:
      - 'lists-sync/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: arga-genomes/arga-lists-sync

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./lists-sync

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: lists-sync/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript build
        run: npm run build

      - name: Check for TypeScript errors
        run: npx tsc --noEmit

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    defaults:
      run:
        working-directory: ./lists-sync

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./lists-sync
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Update deployment status
        if: success()
        run: |
          echo "‚úÖ Docker image built and pushed successfully"
          echo "üè∑Ô∏è Tags: ${{ steps.meta.outputs.tags }}"
